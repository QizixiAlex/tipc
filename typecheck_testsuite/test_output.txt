----------assignments.tip----------
f(): () -> int
{
var x: int,y: int;
y = 5;
x = (10 + (2 * y));
y = (y + 5);
x = (x / y);
y = (x * x);
return ((y - x) * 2);
}

g(a,b,c): (int,int,int) -> int
{
var x: int,y: int,z: int;
x = (a - b);
y = (b - c);
z = (c - a);
a = (a * z);
b = (x / b);
return (a + b);
}

main(): () -> int
{
output f();
return g(1, 1, 1);
}


----------exponential.tip----------
expiter(a,n): (int,int) -> int
{
var v: int,i: int;
v = a;
i = 1;
while ((n > i)) 
{
v = (v * a);
i = (i + 1);
}
return v;
}

exprec(a,n): (int,int) -> int
{
var r: int;
if ((n == 1)) 
r = a;
else
r = (a * exprec(a, (n - 1)));
return r;
}

main(): () -> int
{
output expiter(2, 10);
output exprec(2, 10);
return exprec(2, expiter(2, 4));
}


----------exprs.tip----------
f(): () -> int
{
return 1;
}

g(x): (int) -> int
{
return (x + 3);
}

h(): () -> int
{
var x: int;
x = f();
return ((x + -7) * 4);
}

main(): () -> int
{
output g(f());
output h();
return g((-1 * h()));
}


----------fibs.tip----------
fib(n): (int) -> int
{
var f1: int,f2: int,i: int;
var temp: int;
f1 = 1;
f2 = 1;
i = n;
while ((i > 1)) 
{
temp = (f1 + f2);
f1 = f2;
f2 = temp;
i = (i - 1);
}
return f2;
}

main(): () -> int
{
var i: int;
i = 0;
while ((10 > i)) 
{
output fib(i);
i = (i + 1);
}
return -1;
}


----------fib.tip----------
fib(n): (int) -> int
{
var f1: int,f2: int,i: int,j: &int;
var temp: int;
f1 = 1;
f2 = 1;
j = &f2;
i = n;
while ((i > 1)) 
{
temp = (f1 + f2);
f1 = f2;
f2 = temp;
i = (i - 1);
}
return f2;
}

main(): () -> int
{
var n: int;
n = input;
return fib(n);
}


----------fun.tip----------
----------ifthenelse.tip----------
ite(n): (int) -> int
{
var r: int;
if ((n > 0)) 
{
r = 1;
}
else
{
r = 2;
}
return r;
}

it(n): (int) -> int
{
var r: int;
r = 2;
if ((n > 0)) 
r = 1;
return r;
}

nite(a,b): (int,int) -> int
{
var r: int;
if ((a == 0)) 
if ((b > 0)) 
r = b;
else
r = a;
else
if ((0 > b)) 
r = (0 - a);
else
r = (0 - b);
return r;
}

main(): () -> int
{
output ite(7);
output it(-7);
output nite(0, 7);
return nite(-1, 7);
}


----------ioe.tip----------
main(): () -> int
{
var z: int;
z = input;
z = (z + 13);
if ((0 > z)) 
error z;
else
output z;
return (z + 1);
}


----------mainparams.tip----------
main(x,y): (int,int) -> int
{
return (x + y);
}


----------main.tip----------
main(x): (int) -> int
{
output x;
return x;
}


----------outputerror.tip----------
main(): () -> int
{
var x: int;
x = check(7);
x = check(0);
x = check(-7);
return 3;
}

check(z): (int) -> int
{
if ((0 > z)) 
error z;
else
output z;
return 42;
}


----------ptr1.tip----------
main(): () -> int
{
var x: int,y: &int,z: α;
x = 17;
y = &x;
output *y;
*y = (10 - x);
return *y;
}


----------ptr2.tip----------
main(): () -> int
{
var x: int,y: &int;
x = 42;
y = &x;
output *y;
return x;
}


----------ptr3.tip----------
main(): () -> int
{
var x: int,y: &int;
x = 42;
y = &x;
output *y;
x = 13;
return *y;
}


----------ptr4.tip----------
main(): () -> int
{
var x: int,y: &int,z: α;
x = 42;
y = &x;
output *y;
*y = 13;
return x;
}


----------ptr5.tip----------
main(): () -> int
{
var x1: int,x2: int,y: &int,z: &&int;
x1 = 42;
x2 = 13;
y = &x1;
z = &y;
output **z;
y = &x2;
output **z;
return *y;
}


----------ptr6.tip----------
----------whileifs.tip----------
nestedloopsifs(a,b,c): (int,int,int) -> int
{
var x: int,y: int,z: int;
x = a;
y = (b + c);
z = 42;
if ((x == 10)) 
{
while ((x > 0)) 
{
if ((y == 0)) 
{
z = (z - 4);
}
else
{
while ((x > y)) 
{
z = (z - y);
y = (y + 2);
}
}
x = (x - 2);
}
}
return (z + x);
}

main(): () -> int
{
output nestedloopsifs(0, 42, 42);
output nestedloopsifs(0, 0, 0);
output nestedloopsifs(10, 2, -2);
return nestedloopsifs(10, -2, -2);
}


